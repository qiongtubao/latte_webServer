#!/usr/bin/env node
(function(define) {'use strict'
	define("latte", ["require", "exports", "module", "window"], 
		function(require, exports, module, window) {
			

			
			var web = function(methodName) {
				var applyArray = Array.prototype.splice.call(arguments, 1);
	 			methodName = methodName || "start";
	 			var handle ;
	 			process.argv.splice(1, 0, "/usr/local/bin/latte"); 
	 			try {
	 				//handle = require(__dirname+"/./command/"+methodName);
	 				handle = web[methodName];
	 			}catch(e) {
	 				console.log(e);
	 				return console.log("no the method:"+methodName);
	 			}
	 		
	 			handle.apply(null, applyArray);
			};
			(function() {
				var Path = require("path")
		
				var GetConfig = function() {
					var config;
					var index = process.argv.indexOf("-c");
					if(index != -1) {
						config = process.argv[index+1];
					}
					config = config || "./.latte/web.json";
					var buildConfigPath = Path.join(process.cwd()+"/"+config);
					var buildConfig;
					try {
						buildConfig = require(buildConfigPath);
					}catch(e) {
						return null;
					}
					return buildConfig;
				};
				var start  = this.start= function() {
						var config = GetConfig();
						config = config || {
							port : 11111,
							cpus: 1
						};

						var Server = require("../lib");
			            var server = new Server(config);
			            
			            server.run();
			    }
				
			}).call(web);
			module.exports = web;
		});
})(typeof define === "function"? define: function(name, reqs, factory) { factory(require, exports, module); });
